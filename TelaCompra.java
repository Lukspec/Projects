/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package farmaciaalfa;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JTable;
import javax.swing.JTextField;

/**
 *
 * @author lukas
 */
public class TelaCompra extends javax.swing.JDialog {

    public List<String> descList = new ArrayList<>();
    public List<String> qtdList = new ArrayList<>();
    public List<String> precoList = new ArrayList<>();
    private final String arquivoEstoque = "estoque.txt";
    public static String mensagem;
    
    public static int quantpro;
    public static String sp;
    
    public TelaCompra(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        carregarDadosDoArquivo();
    }
    
    private void atualizarTabela() {
        DefaultTableModel model = (DefaultTableModel) tabelaProdutos.getModel();
        model.setRowCount(0); // Limpa as linhas da tabela antes de adicionar os novos dados

        for (int i = 0; i < descList.size(); i++) {
            model.addRow(new Object[]{descList.get(i), qtdList.get(i), precoList.get(i)});
        }
    }
    
    private void carregarDadosDoArquivo() {
        try (BufferedReader br = new BufferedReader(new FileReader(arquivoEstoque))) {
            String linha;
            while ((linha = br.readLine()) != null) {
                String[] dados = linha.split("\\|"); // Supondo que os dados estejam separados por "|"
                if (dados.length == 3) {
                    descList.add(dados[0].trim());
                    qtdList.add(dados[1].trim());
                    precoList.add(dados[2].trim());
                }
            }
            // Atualiza a tabela com os dados carregados
            atualizarTabela();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Erro ao carregar os dados do arquivo.");
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabelaProdutos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Compra");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Seleção"));

        jButton1.setText("Comprar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI Semibold", 1, 24)); // NOI18N
        jLabel4.setText("FARMACIA ALPHA");

        tabelaProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Produtos", "Quantidade", "Preço"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tabelaProdutos);
        if (tabelaProdutos.getColumnModel().getColumnCount() > 0) {
            tabelaProdutos.getColumnModel().getColumn(0).setResizable(false);
            tabelaProdutos.getColumnModel().getColumn(1).setResizable(false);
            tabelaProdutos.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane4)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 290, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(288, 288, 288))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel4)
                .addGap(53, 53, 53)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            // Pega o índice da linha selecionada na tabela
            int selectedRow = tabelaProdutos.getSelectedRow();

            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(this, "Por favor, selecione um produto.");
                return;
            }

            // Obtém os dados da linha selecionada
            String descricao = (String) tabelaProdutos.getValueAt(selectedRow, 0);
            String qtdDisponivel = (String) tabelaProdutos.getValueAt(selectedRow, 1);
            String preco = (String) tabelaProdutos.getValueAt(selectedRow, 2);

            // Obtém a quantidade comprada do usuário
            int quantidadeComprada = Integer.parseInt(JOptionPane.showInputDialog(this, "Quantos itens deseja comprar?"));

            String vdc = preco.replaceAll("[^0-9.,]", "").replace(',', '.');
            float valor = Float.parseFloat(vdc);
            float valorDaCompra = valor * quantidadeComprada;

            // Mensagem para exibir ao usuário
            mensagem = "Nota Fiscal: \n\n" +
                    "Descrição: " + descricao + "\n" +
                    "Unidades Compradas: " + quantidadeComprada + "\n" +
                    "Valor da Compra: R$" + valorDaCompra + "\n" +
                    "Cliente: " + LoginCliente.nomec;

            // Obtendo o índice do item selecionado
            int selectedIndex = descList.indexOf(descricao);

            if (selectedIndex >= 0) {
                // Subtraímos a quantidade comprada da quantidade existente
                int quantidadeAtual = Integer.parseInt(qtdList.get(selectedIndex));
                if (quantidadeComprada <= quantidadeAtual) {
                    int novaQuantidade = quantidadeAtual - quantidadeComprada;
                    qtdList.set(selectedIndex, String.valueOf(novaQuantidade)); // Atualizando a lista de quantidades

                    // Atualiza a tabela com a nova quantidade
                    tabelaProdutos.setValueAt(qtdList.get(selectedIndex), selectedRow, 1);

                    // Atualizar o arquivo de estoque
                    salvarDadosNoArquivo();
                    JOptionPane.showMessageDialog(null, "Compra realizada com sucesso!");
                    JOptionPane.showMessageDialog(null, mensagem);
                } else {
                    JOptionPane.showMessageDialog(null, "Quantidade solicitada maior do que o estoque disponível.");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Produto não encontrado.");
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro ao converter a quantidade para número: " + e.getMessage());
        }
        
        this.dispose();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void salvarDadosNoArquivo() {
        try (BufferedWriter bw = new BufferedWriter(new FileWriter(arquivoEstoque))) {
            // Escrever os dados atualizados no arquivo
            for (int i = 0; i < descList.size(); i++) {
                String linha = descList.get(i) + " | " + qtdList.get(i) + " | " + precoList.get(i);
                bw.write(linha);
                bw.newLine();
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Erro ao salvar os dados no arquivo.");
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TelaCompra dialog = new TelaCompra(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable tabelaProdutos;
    // End of variables declaration//GEN-END:variables
}
